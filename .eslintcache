[{"D:\\mycode\\react-ts-amis_test\\src\\index.tsx":"1","D:\\mycode\\react-ts-amis_test\\src\\App.tsx":"2","D:\\mycode\\react-ts-amis_test\\src\\custom\\Record.jsx":"3","D:\\mycode\\react-ts-amis_test\\src\\custom\\Emoji.jsx":"4","D:\\mycode\\react-ts-amis_test\\src\\custom\\Textarea.jsx":"5","D:\\mycode\\react-ts-amis_test\\src\\custom\\NewEmoji.jsx":"6","D:\\mycode\\react-ts-amis_test\\src\\lib\\emojiDictionaries.js":"7","D:\\mycode\\react-ts-amis_test\\src\\lib\\imgmap.js":"8"},{"size":203,"mtime":1610257609720,"results":"9","hashOfConfig":"10"},{"size":4269,"mtime":1610606896545,"results":"11","hashOfConfig":"10"},{"size":5917,"mtime":1609905865700,"results":"12","hashOfConfig":"10"},{"size":900,"mtime":1610259040816,"results":"13","hashOfConfig":"10"},{"size":2154,"mtime":1610002853808,"results":"14","hashOfConfig":"10"},{"size":2096,"mtime":1610260100281,"results":"15","hashOfConfig":"10"},{"size":3503,"mtime":1610024223903,"results":"16","hashOfConfig":"10"},{"size":6069,"mtime":1610022728154,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tbp1lg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"D:\\mycode\\react-ts-amis_test\\src\\index.tsx",[],["39","40"],"D:\\mycode\\react-ts-amis_test\\src\\App.tsx",["41","42","43"],"D:\\mycode\\react-ts-amis_test\\src\\custom\\Record.jsx",[],["44","45"],"D:\\mycode\\react-ts-amis_test\\src\\custom\\Emoji.jsx",["46"],"import * as React from 'react';\r\nimport { Renderer } from 'amis';\r\nimport './Emoji.css'\r\n/**\r\n * 这个组件要接受什么参数呢？\r\n * 我肯定是要把我选中的emoji发出怎么发，在这种amis中怎么发呢？\r\n * \r\n * - show?\r\n * \r\n */\r\n\r\nexport class Emoji extends React.Component {\r\n    state = {\r\n        textareaValue: \"\"\r\n    }\r\n\r\n    logEmoji(emoji) {\r\n        console.log(emoji)\r\n        this.setState({\r\n            textareaValue: this.state.textareaValue + emoji.unicode\r\n        })\r\n    }\r\n\r\n    // this.logEmoji.bind(this)\r\n    render() {\r\n        const { clickHandle } = this.props;\r\n        return (\r\n            <div className=\"emoji\">\r\n                <div className=\"emoji-picker\"> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst EmojiRender = Renderer({\r\n    test: /(^|\\/)enoji$/,\r\n    name: \"enoji\"\r\n})(Emoji)\r\nexport default EmojiRender;","D:\\mycode\\react-ts-amis_test\\src\\custom\\Textarea.jsx",["47","48"],"import * as React from 'react';\r\nimport { FormItem } from 'amis';\r\nimport classnames from 'classnames'\r\nimport { Emoji } from './Emoji'\r\nimport './Textarea.css'\r\n\r\n\r\nclass Newtextarea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: true,\r\n            value: \"\"\r\n        }\r\n        this.clickToEmoji = this.clickToEmoji.bind(this);\r\n    }\r\n    openRecord() {\r\n        console.log(\r\n            `录音弹框`\r\n        );\r\n    }\r\n    openEmoji() {\r\n        this.setState({ isShow: !this.state.isShow })\r\n        console.log(\r\n            `表情弹框`\r\n        );\r\n    }\r\n\r\n    clickToEmoji(value) {\r\n        console.log(value);\r\n        console.log(this);\r\n        this.setState({\r\n            value: this.state.value + value.unicode\r\n        })\r\n    }\r\n    edit(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    sendData(){\r\n        this.props.env.fetcher('www.baidu.com',{data:this.state.value})\r\n        console.log('发送');\r\n    }\r\n    render() {\r\n        const { value, onChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"custom-textarea\">\r\n                <textarea style={{ resize: \"none\" }} onInput={(e) => this.edit(e)} className=\"custom-textarea-con\" name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={this.state.value}></textarea>\r\n                <div className=\"custom-textarea-icon\">\r\n                    <i className=\"iconfont icon-luyin\" onClick={() => { this.openRecord() }}></i>\r\n                    <i className=\"iconfont icon-biaoqing\" onClick={() => { this.openEmoji() }}></i>\r\n                    <i className=\"iconfont icon-icon-\" onClick={() => { this.sendData() }}></i>\r\n                </div>\r\n\r\n                <div className={classnames(\"moni\", {\r\n                    show: this.state.isShow\r\n                })}>\r\n                    <Emoji\r\n                        clickHandle={this.clickToEmoji}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst NewtextareaReader = FormItem({\r\n    type: 'textarea11'\r\n})(Newtextarea)\r\nexport default NewtextareaReader","D:\\mycode\\react-ts-amis_test\\src\\custom\\NewEmoji.jsx",["49","50","51","52"],"import * as React from 'react';\r\nimport { Renderer } from 'amis';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport emojiDictionary from '../lib/emojiDictionaries'\r\nimport { PhotoProvider, PhotoConsumer } from 'react-photo-view';\r\nimport { Image } from 'antd'\r\nimport 'react-photo-view/dist/index.css';\r\n\r\nimport { Item } from 'amis/lib/store/list';\r\nimport './NewEmoji.css'\r\n\r\nconst newEmojiDictionary = Object.entries(emojiDictionary)\r\nconst NewEmojiItem = (props) => {\r\n    const { picPath, dataMsg } = props;\r\n    return (\r\n        <span className=\"pic\">\r\n            <img className=\"pic-img\" src={picPath} data-msg={dataMsg} />\r\n        </span>\r\n    )\r\n}\r\n\r\nclass NewEmoji extends React.Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        console.log(newEmojiDictionary);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"newemoji\">\r\n                <Scrollbars\r\n                    style={{ height: '200px' }}\r\n                    autoHide\r\n                >\r\n                    {\r\n                        newEmojiDictionary.map(item => {\r\n                            return <NewEmojiItem\r\n                                picPath={item[1]}\r\n                                dataMsg={item[0]}\r\n                                key={item[0]}\r\n                            />\r\n                        })\r\n                    }\r\n                </Scrollbars>\r\n                {/* <PhotoProvider>\r\n                    {photoImages.map((item, index) => (\r\n                        <PhotoConsumer key={index} src={item} intro={item}>\r\n                            <img src={item} alt=\"\" />\r\n                        </PhotoConsumer>\r\n                    ))}\r\n                </PhotoProvider> */}\r\n                <Image\r\n                    width={200}\r\n                    src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst NewEmojiRender = Renderer({\r\n    test: /(^|\\/)new-enoji$/,\r\n    name: \"new-enoji\"\r\n})(NewEmoji)\r\n\r\nexport default NewEmojiRender;","D:\\mycode\\react-ts-amis_test\\src\\lib\\emojiDictionaries.js",[],"D:\\mycode\\react-ts-amis_test\\src\\lib\\imgmap.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":9,"column":17,"nodeType":"59","messageId":"60","endLine":9,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":98,"column":22,"nodeType":"64","messageId":"65","endLine":98,"endColumn":77},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"66","severity":1,"message":"67","line":26,"column":17,"nodeType":"59","messageId":"60","endLine":26,"endColumn":28},{"ruleId":"66","severity":1,"message":"68","line":46,"column":17,"nodeType":"59","messageId":"60","endLine":46,"endColumn":22},{"ruleId":"66","severity":1,"message":"69","line":46,"column":24,"nodeType":"59","messageId":"60","endLine":46,"endColumn":32},{"ruleId":"66","severity":1,"message":"70","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":23},{"ruleId":"66","severity":1,"message":"71","line":5,"column":25,"nodeType":"59","messageId":"60","endLine":5,"endColumn":38},{"ruleId":"66","severity":1,"message":"72","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":17,"column":13,"nodeType":"75","endLine":17,"endColumn":73},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"@typescript-eslint/no-unused-vars","'alert' is defined but never used.","Identifier","unusedVar","'confirm' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'clickHandle' is assigned a value but never used.","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'PhotoProvider' is defined but never used.","'PhotoConsumer' is defined but never used.","'Item' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]