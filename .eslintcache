[{"D:\\mycode\\react-ts-amis_test\\src\\index.tsx":"1","D:\\mycode\\react-ts-amis_test\\src\\App.tsx":"2","D:\\mycode\\react-ts-amis_test\\src\\custom\\Record.jsx":"3","D:\\mycode\\react-ts-amis_test\\src\\custom\\Emoji.jsx":"4","D:\\mycode\\react-ts-amis_test\\src\\custom\\Textarea.jsx":"5","D:\\mycode\\react-ts-amis_test\\src\\custom\\NewEmoji.jsx":"6","D:\\mycode\\react-ts-amis_test\\src\\lib\\emojiDictionaries.js":"7","D:\\mycode\\react-ts-amis_test\\src\\lib\\imgmap.js":"8","D:\\mycode\\react-ts-amis_test\\src\\custom\\bulkActions.tsx":"9","D:\\mycode\\react-ts-amis_test\\src\\custom\\emojinew.jsx":"10","D:\\mycode\\react-ts-amis_test\\src\\custom\\emojiInput.jsx":"11"},{"size":203,"mtime":1610257609720,"results":"12","hashOfConfig":"13"},{"size":2198,"mtime":1612405838317,"results":"14","hashOfConfig":"13"},{"size":5944,"mtime":1611547065930,"results":"15","hashOfConfig":"13"},{"size":900,"mtime":1610259040816,"results":"16","hashOfConfig":"13"},{"size":2154,"mtime":1610002853808,"results":"17","hashOfConfig":"13"},{"size":2022,"mtime":1610796492922,"results":"18","hashOfConfig":"13"},{"size":3503,"mtime":1610796492923,"results":"19","hashOfConfig":"13"},{"size":6069,"mtime":1610022728154,"results":"20","hashOfConfig":"13"},{"size":454,"mtime":1610609854789,"results":"21","hashOfConfig":"13"},{"size":1296,"mtime":1610805661086,"results":"22","hashOfConfig":"13"},{"size":2769,"mtime":1612418628191,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1tbp1lg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\mycode\\react-ts-amis_test\\src\\index.tsx",[],["54","55"],"D:\\mycode\\react-ts-amis_test\\src\\App.tsx",["56","57"],"D:\\mycode\\react-ts-amis_test\\src\\custom\\Record.jsx",[],["58","59"],"D:\\mycode\\react-ts-amis_test\\src\\custom\\Emoji.jsx",["60"],"import * as React from 'react';\r\nimport { Renderer } from 'amis';\r\nimport './Emoji.css'\r\n/**\r\n * 这个组件要接受什么参数呢？\r\n * 我肯定是要把我选中的emoji发出怎么发，在这种amis中怎么发呢？\r\n * \r\n * - show?\r\n * \r\n */\r\n\r\nexport class Emoji extends React.Component {\r\n    state = {\r\n        textareaValue: \"\"\r\n    }\r\n\r\n    logEmoji(emoji) {\r\n        console.log(emoji)\r\n        this.setState({\r\n            textareaValue: this.state.textareaValue + emoji.unicode\r\n        })\r\n    }\r\n\r\n    // this.logEmoji.bind(this)\r\n    render() {\r\n        const { clickHandle } = this.props;\r\n        return (\r\n            <div className=\"emoji\">\r\n                <div className=\"emoji-picker\"> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst EmojiRender = Renderer({\r\n    test: /(^|\\/)enoji$/,\r\n    name: \"enoji\"\r\n})(Emoji)\r\nexport default EmojiRender;","D:\\mycode\\react-ts-amis_test\\src\\custom\\Textarea.jsx",["61","62"],"import * as React from 'react';\r\nimport { FormItem } from 'amis';\r\nimport classnames from 'classnames'\r\nimport { Emoji } from './Emoji'\r\nimport './Textarea.css'\r\n\r\n\r\nclass Newtextarea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: true,\r\n            value: \"\"\r\n        }\r\n        this.clickToEmoji = this.clickToEmoji.bind(this);\r\n    }\r\n    openRecord() {\r\n        console.log(\r\n            `录音弹框`\r\n        );\r\n    }\r\n    openEmoji() {\r\n        this.setState({ isShow: !this.state.isShow })\r\n        console.log(\r\n            `表情弹框`\r\n        );\r\n    }\r\n\r\n    clickToEmoji(value) {\r\n        console.log(value);\r\n        console.log(this);\r\n        this.setState({\r\n            value: this.state.value + value.unicode\r\n        })\r\n    }\r\n    edit(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    sendData(){\r\n        this.props.env.fetcher('www.baidu.com',{data:this.state.value})\r\n        console.log('发送');\r\n    }\r\n    render() {\r\n        const { value, onChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"custom-textarea\">\r\n                <textarea style={{ resize: \"none\" }} onInput={(e) => this.edit(e)} className=\"custom-textarea-con\" name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={this.state.value}></textarea>\r\n                <div className=\"custom-textarea-icon\">\r\n                    <i className=\"iconfont icon-luyin\" onClick={() => { this.openRecord() }}></i>\r\n                    <i className=\"iconfont icon-biaoqing\" onClick={() => { this.openEmoji() }}></i>\r\n                    <i className=\"iconfont icon-icon-\" onClick={() => { this.sendData() }}></i>\r\n                </div>\r\n\r\n                <div className={classnames(\"moni\", {\r\n                    show: this.state.isShow\r\n                })}>\r\n                    <Emoji\r\n                        clickHandle={this.clickToEmoji}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst NewtextareaReader = FormItem({\r\n    type: 'textarea11'\r\n})(Newtextarea)\r\nexport default NewtextareaReader","D:\\mycode\\react-ts-amis_test\\src\\custom\\NewEmoji.jsx",["63","64","65","66"],"import * as React from 'react';\r\nimport { Renderer } from 'amis';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport emojiDictionary from '../lib/emojiDictionaries'\r\nimport { Image } from 'antd'\r\nimport 'react-photo-view/dist/index.css';\r\n\r\nimport './NewEmoji.css'\r\n\r\nconst newEmojiDictionary = Object.entries(emojiDictionary)\r\nconst NewEmojiItem = (props) => {\r\n    const { picPath, dataMsg } = props;\r\n    return (\r\n        <span className=\"pic\">\r\n            <img className=\"pic-img\" src={picPath} data-msg={dataMsg} />\r\n        </span>\r\n    )\r\n}\r\n\r\nclass NewEmoji extends React.Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        console.log(newEmojiDictionary);\r\n    }\r\n    render() {\r\n        return (\r\n            <div  className=\"newemoji\">\r\n                <Scrollbars\r\n                    style={{ height: '200px' }}\r\n                    autoHide\r\n                >\r\n                    {\r\n                        newEmojiDictionary.map(item => {\r\n                            return <NewEmojiItem\r\n\r\n                                picPath={item[1]}\r\n                                dataMsg={item[0]}\r\n                                key={item[0]}\r\n                                \r\n                            />\r\n                        })\r\n                    }\r\n                </Scrollbars>\r\n                {/* <PhotoProvider>\r\n                    {photoImages.map((item, index) => (\r\n                        <PhotoConsumer key={index} src={item} intro={item}>\r\n                            <img src={item} alt=\"\" />\r\n                        </PhotoConsumer>\r\n                    ))}\r\n                </PhotoProvider> */}\r\n                <Image\r\n                    width={200}\r\n                    src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst NewEmojiRender = Renderer({\r\n    test: /(^|\\/)new-enoji$/,\r\n    name: \"new-enoji\"\r\n})(NewEmoji)\r\n\r\nexport default NewEmojiRender;",["67","68"],"D:\\mycode\\react-ts-amis_test\\src\\lib\\emojiDictionaries.js",[],"D:\\mycode\\react-ts-amis_test\\src\\lib\\imgmap.js",[],"D:\\mycode\\react-ts-amis_test\\src\\custom\\bulkActions.tsx",[],["69","70"],"D:\\mycode\\react-ts-amis_test\\src\\custom\\emojinew.jsx",["71","72"],"import * as React from 'react';\r\nimport { useEffect } from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n\r\nimport emojiDictionary from '../lib/emojiDictionaries'\r\nconst newEmojiDictionary = Object.entries(emojiDictionary)\r\n\r\nconst EmojiItem = (props) => {\r\n    const { msg, pic, clickEmoji } = props\r\n    return (\r\n        <span className=\"emoji-item-img\" onClick={() => { clickEmoji(pic, msg) }}>\r\n            <img src={pic} data-msg={msg} />\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nconst EmojiNew = (props) => {\r\n    const { clickEmoji } = props\r\n    useEffect(() => {\r\n        console.log();\r\n    })\r\n    return (\r\n        <Scrollbars\r\n            style={{ height: '100px' }}\r\n            autoHide\r\n        >\r\n            <div className=\"emoji-new\">\r\n\r\n                {\r\n                    newEmojiDictionary.map(\r\n                        item => {\r\n                            return <EmojiItem\r\n                                key={item[0]}\r\n                                msg={item[0]}\r\n                                pic={item[1]}\r\n                                clickEmoji={clickEmoji}\r\n                            />\r\n                        }\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </Scrollbars >\r\n    );\r\n}\r\n\r\nexport default EmojiNew;","D:\\mycode\\react-ts-amis_test\\src\\custom\\emojiInput.jsx",["73","74","75","76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":15},{"ruleId":"83","severity":1,"message":"87","line":9,"column":17,"nodeType":"85","messageId":"86","endLine":9,"endColumn":24},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"88","severity":1,"message":"89","line":26,"column":17,"nodeType":"85","messageId":"86","endLine":26,"endColumn":28},{"ruleId":"88","severity":1,"message":"90","line":46,"column":17,"nodeType":"85","messageId":"86","endLine":46,"endColumn":22},{"ruleId":"88","severity":1,"message":"91","line":46,"column":24,"nodeType":"85","messageId":"86","endLine":46,"endColumn":32},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":23},{"ruleId":"88","severity":1,"message":"93","line":5,"column":25,"nodeType":"85","messageId":"86","endLine":5,"endColumn":38},{"ruleId":"88","severity":1,"message":"94","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":17,"column":13,"nodeType":"97","endLine":17,"endColumn":73},{"ruleId":"79","replacedBy":"98"},{"ruleId":"81","replacedBy":"99"},{"ruleId":"79","replacedBy":"98"},{"ruleId":"81","replacedBy":"99"},{"ruleId":"95","severity":1,"message":"96","line":13,"column":13,"nodeType":"97","endLine":13,"endColumn":45},{"ruleId":"100","severity":1,"message":"101","line":20,"column":11,"nodeType":"102","messageId":"103","endLine":20,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":53,"column":43,"nodeType":"106","messageId":"107","endLine":53,"endColumn":44,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"109","line":53,"column":45,"nodeType":"106","messageId":"107","endLine":53,"endColumn":46,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":53,"column":54,"nodeType":"106","messageId":"107","endLine":53,"endColumn":55,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"109","line":53,"column":56,"nodeType":"106","messageId":"107","endLine":53,"endColumn":57,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"105","line":53,"column":62,"nodeType":"106","messageId":"107","endLine":53,"endColumn":63,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"109","line":53,"column":64,"nodeType":"106","messageId":"107","endLine":53,"endColumn":65,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'alert' is defined but never used.","Identifier","unusedVar","'confirm' is defined but never used.","no-unused-vars","'clickHandle' is assigned a value but never used.","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'PhotoProvider' is defined but never used.","'PhotoConsumer' is defined but never used.","'Item' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["115"],["116"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["117","118"],"Unnecessary escape character: \\\".",["119","120"],["121","122"],["123","124"],["125","126"],["127","128"],"no-global-assign","no-unsafe-negation",{"messageId":"129","fix":"130","desc":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"132","fix":"136","desc":"134"},{"messageId":"129","fix":"137","desc":"131"},{"messageId":"132","fix":"138","desc":"134"},{"messageId":"129","fix":"139","desc":"131"},{"messageId":"132","fix":"140","desc":"134"},{"messageId":"129","fix":"141","desc":"131"},{"messageId":"132","fix":"142","desc":"134"},{"messageId":"129","fix":"143","desc":"131"},{"messageId":"132","fix":"144","desc":"134"},"removeEscape",{"range":"145","text":"146"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"147","text":"148"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"149","text":"146"},{"range":"150","text":"148"},{"range":"151","text":"146"},{"range":"152","text":"148"},{"range":"153","text":"146"},{"range":"154","text":"148"},{"range":"155","text":"146"},{"range":"156","text":"148"},{"range":"157","text":"146"},{"range":"158","text":"148"},[1513,1514],"",[1513,1513],"\\",[1515,1516],[1515,1515],[1524,1525],[1524,1524],[1526,1527],[1526,1526],[1532,1533],[1532,1532],[1534,1535],[1534,1534]]